//This Is A C Program Where You Can Find Your Day Of Birth
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
  int day, month, year;

  printf("Enter the date (dd mm yyyy): ");
  scanf("%d %d %d", &day, &month, &year);

  // Convert the date to a time_t value
  struct tm tm = {0};
  tm.tm_mday = day;
  tm.tm_mon = month - 1;  // tm_mon is 0-based
  tm.tm_year = year - 1900;  // tm_year is number of years since 1900

  // Check if the date is valid
  int max_days_in_month;
  if (tm.tm_mon == 1) {  // February
    if (tm.tm_year % 4 == 0 && (tm.tm_year % 100 != 0 || tm.tm_year % 400 == 0)) {
      // Leap year
      max_days_in_month = 29;
    } else {
      max_days_in_month = 28;
    }
  } else if (tm.tm_mon == 3 || tm.tm_mon == 5 || tm.tm_mon == 8 || tm.tm_mon == 10) {
    // April, June, September, November
    max_days_in_month = 30;
  } else {
    // All other months
    max_days_in_month = 31;
  }

  if (tm.tm_mday < 1 || tm.tm_mday > max_days_in_month) {
    printf("Invalid date\n");
    return 1;
  }

  time_t time = mktime(&tm);

  // Get the day of the week for the time_t value
  struct tm *time_ptr = localtime(&time);
  int day_of_week = time_ptr->tm_wday;

  // Print the day of the week
  printf("The day is ");
  switch (day_of_week) {
    case 0:
      printf("Sunday");
      break;
    case 1:
      printf("Monday");
      break;
    case 2:
      printf("Tuesday");
      break;
    case 3:
      printf("Wednesday");
      break;
    case 4:
      printf("Thursday");
      break;
    case 5:
      printf("Friday");
      break;
    case 6:
      printf("Saturday");
      break;
    default:
      printf("Invalid day of week");
      break;
  }
  printf("\n");

  return 0;
}
